{"version":3,"sources":["components/navbar/index.jsx","pages/List.jsx","components/song/Lyrics.jsx","components/words/WordAdd.jsx","components/words/WordEdit.jsx","components/words/WordsList.jsx","pages/Show.jsx","pages/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","isActive","inherits","createClass","key","value","_this2","react_default","a","createElement","className","href","src","alt","width","height","onClick","setState","classnames","navbar-burger burger","is-active","data-target","id","navbar-menu","Link","to","Component","List","song","hover","componentDidMount","Axios","get","then","res","console","log","data","doc","navbar","map","item","_id","details","thumbnails","high","url","title","channelTitle","Lyrics","_ref","lyrics","showEditor","handleEditor","handleChange","updateLyrics","ReactHtmlparser","react_quill_lib_default","class","onChange","WordAdd","modal","wordType","addVocab","e","preventDefault","method","songId","props","word","refs","translate","image","msg","loadWords","form","reset","_this$state","style","display","justifyContent","color","aria-label","ref","type","target","defaultValue","WordEdit","editWord","wordId","margin","WordsList","words","deleteWord","backgroundColor","fontWeight","fontSize","words_WordEdit","words_WordAdd","Show","youtubeId","loadSong","axios","match","params","idWord","window","confirm","padding","index_min_default","position","overflow","song_Lyrics","words_WordsList","Search","search","isLoading","searchOnEnter","searchOnButton","moreSearch","addSong","created","Date","toast","POSITION","BOTTOM_RIGHT","searchList","index","default","onKeyPress","button is-warning","is-loading","App","BrowserRouter","lib","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54e089a5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport classnames from 'classnames'\n\nexport class Navbar extends Component {\n   state = {\n      isActive: false\n   }\n   render() {\n      return (\n         <nav className=\"navbar is-primary\">\n            <div className=\"navbar-brand\">\n               <a className=\"navbar-item\" href=\"/\">\n                  <img\n                     src=\"https://bulma.io/images/bulma-logo-white.png\"\n                     alt=\"Bulma: a modern CSS framework based on Flexbox\"\n                     width=\"112\"\n                     height=\"28\"\n                  />\n               </a>\n               <div\n                  onClick={() =>\n                     this.setState({ isActive: !this.state.isActive })\n                  }\n                  className={classnames({\n                     'navbar-burger burger': true,\n                     'is-active': this.state.isActive\n                  })}\n                  data-target=\"navbarExampleTransparentExample\">\n                  <span />\n                  <span />\n                  <span />\n               </div>\n            </div>\n\n            <div\n               id=\"navbarExampleTransparentExample\"\n               className={classnames({\n                  'navbar-menu': true,\n                  'is-active': this.state.isActive\n               })}>\n               <div className=\"navbar-end\">\n                  <Link to=\"/\" className=\"navbar-item\">\n                     List\n                  </Link>\n                  <Link to=\"/words\" className=\"navbar-item\">\n                     Words\n                  </Link>\n                  <Link to=\"/search\" className=\"navbar-item\">\n                     Search\n                  </Link>\n               </div>\n            </div>\n         </nav>\n      )\n   }\n}\n\nexport default Navbar\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Axios from 'axios'\n\nimport Navbar from '../components/navbar'\n\nexport class List extends Component {\n   state = {\n      song: [],\n      hover: {}\n   }\n\n   componentDidMount = () => {\n      Axios.get('/song').then(res => {\n         console.log(res.data.doc)\n         this.setState({ song: res.data.doc })\n      })\n   }\n\n   render() {\n      const { song } = this.state\n      return (\n         <div>\n            <Navbar />\n            <div className=\"container\">\n               <div className=\"column\">\n                  <h3 className=\"title is-3\">Song List</h3>\n                  {song.map(item => {\n                     return (\n                        <div className=\"column\" key={item._id}>\n                           <Link to={`/show/${item._id}`}>\n                              <div className=\"box list\">\n                                 <div className=\"columns\">\n                                    <div className=\"column is-2 has-text-centered\">\n                                       <img\n                                          src={item.details.thumbnails.high.url}\n                                          alt=\"\"\n                                       />\n                                    </div>\n                                    <div className=\"column\">\n                                       <p>{item.details.title}</p>\n                                       <small>\n                                          {item.details.channelTitle}\n                                       </small>\n                                    </div>\n                                 </div>\n                              </div>\n                           </Link>\n                        </div>\n                     )\n                  })}\n               </div>\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default List\n","import React from 'react'\nimport ReactHtmlparser from 'react-html-parser'\nimport ReactQuill from 'react-quill'\n\nconst Lyrics = ({\n   lyrics,\n   showEditor,\n   handleEditor,\n   handleChange,\n   updateLyrics\n}) => {\n   return (\n      <div>\n         <div>{ReactHtmlparser(lyrics)}</div>\n         <hr />\n         <button\n            className=\"button is-warning is-fullwidth\"\n            onClick={handleEditor}>\n            Show/Hide\n         </button>\n         {showEditor ? (\n            <div>\n               <button\n                  className=\"button is-primary is-fullwidth\"\n                  onClick={updateLyrics}>\n                  Save\n               </button>\n               <ReactQuill class onChange={handleChange} value={lyrics} />\n            </div>\n         ) : null}\n      </div>\n   )\n}\n\nexport default Lyrics\n","import React, { Component } from 'react'\nimport classnames from 'classnames'\nimport Axios from 'axios'\n\nexport class WordAdd extends Component {\n   // state\n   state = {\n      modal: false,\n      wordType: 'n.'\n   }\n\n   // method\n   addVocab = e => {\n      e.preventDefault()\n      Axios({\n         url: '/word',\n         method: 'POST',\n         data: {\n            songId: this.props.songId,\n            word: this.refs.word.value,\n            wordType: this.state.wordType,\n            translate: this.refs.translate.value,\n            image: this.refs.image.value\n         }\n      }).then(res => {\n         console.log(res.data)\n         if (res.data.msg === 'Success') {\n            this.props.loadWords()\n            this.setState({ modal: false })\n            this.refs.form.reset()\n         }\n      })\n   }\n\n   render() {\n      const { modal, wordType } = this.state\n      return (\n         <div\n            style={{\n               display: 'flex',\n               justifyContent: 'center',\n               color: 'black'\n            }}>\n            <button\n               className=\"button is-info\"\n               onClick={() => this.setState({ modal: !modal })}>\n               Add Word\n            </button>\n            <div\n               className={classnames({\n                  modal: true,\n                  'is-active': modal\n               })}>\n               <div className=\"modal-background\" />\n               <div className=\"modal-card\">\n                  <header className=\"modal-card-head\">\n                     <p className=\"modal-card-title\">Add Word</p>\n                     <button\n                        className=\"delete\"\n                        aria-label=\"close\"\n                        onClick={() => this.setState({ modal: !modal })}\n                     />\n                  </header>\n                  <section className=\"modal-card-body\">\n                     <form ref=\"form\">\n                        <div className=\"columns\">\n                           <div className=\"column\">\n                              <label>Word</label>\n                              <input ref=\"word\" type=\"text\" className=\"input\" />\n                           </div>\n                           <div className=\"column\">\n                              <label>Type</label>\n                              <br />\n                              <div className=\"select\">\n                                 <select\n                                    onChange={e =>\n                                       this.setState({\n                                          wordType: e.target.value\n                                       })\n                                    }\n                                    defaultValue={wordType}>\n                                    <option value=\"n.\">Noun</option>\n                                    <option value=\"v.\">Verb</option>\n                                    <option value=\"adj.\">Adjective</option>\n                                    <option value=\"adv.\">Adverb</option>\n                                    <option value=\"prep.\">Preposition</option>\n                                    <option value=\"conj.\">Conjunction</option>\n                                    <option value=\"pp.\">Past Participle</option>\n                                    <option value=\"pt.\">Part Tense</option>\n                                 </select>\n                              </div>\n                           </div>\n                        </div>\n                        <div className=\"columns\">\n                           <div className=\"column\">\n                              <label>Translate</label>\n                              <input\n                                 ref=\"translate\"\n                                 type=\"text\"\n                                 className=\"input\"\n                              />\n                           </div>\n                        </div>\n                        <div className=\"columns\">\n                           <div className=\"column\">\n                              <label>Image</label>\n                              <input\n                                 ref=\"image\"\n                                 type=\"text\"\n                                 className=\"input\"\n                              />\n                           </div>\n                        </div>\n                     </form>\n                  </section>\n                  <footer className=\"modal-card-foot\">\n                     <button className=\"button is-info\" onClick={this.addVocab}>\n                        Save\n                     </button>\n                     <button\n                        className=\"button\"\n                        onClick={() => this.setState({ modal: !modal })}>\n                        Cancel\n                     </button>\n                  </footer>\n               </div>\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default WordAdd\n","import React, { Component } from 'react'\nimport classnames from 'classnames'\nimport Axios from 'axios'\n\nexport class WordEdit extends Component {\n   // state\n   state = {\n      modal: false,\n      wordType: 'n.'\n   }\n\n   // method\n   editWord = e => {\n      console.log(this.props.wordId)\n      e.preventDefault()\n\n      Axios({\n         url: '/word',\n         method: 'put',\n         data: {\n            wordId: this.props.wordId,\n            word: this.refs.word.value,\n            wordType: this.state.wordType,\n            translate: this.refs.translate.value,\n            image: this.refs.image.value\n         }\n      }).then(res => {\n         console.log(res.data)\n         if (res.data.msg === 'Success') {\n            this.props.loadWords()\n            this.setState({ modal: false, type: 'n.' })\n            this.refs.form.reset()\n         }\n      })\n   }\n\n   render() {\n      const { modal } = this.state\n      const { word } = this.props\n      return (\n         <div style={{ color: 'black' }}>\n            <button\n               className=\"button is-success is-small\"\n               style={{ margin: '0.5rem' }}\n               onClick={() => this.setState({ modal: !modal })}>\n               Edit\n            </button>\n            <div\n               className={classnames({\n                  modal: true,\n                  'is-active': modal\n               })}>\n               <div className=\"modal-background\" />\n               <div className=\"modal-card\">\n                  <header className=\"modal-card-head\">\n                     <p className=\"modal-card-title\">Edit Word</p>\n                     <button\n                        className=\"delete\"\n                        aria-label=\"close\"\n                        onClick={() =>\n                           this.setState({ modal: !modal, type: 'n.' })\n                        }\n                     />\n                  </header>\n                  <section className=\"modal-card-body\">\n                     <form ref=\"form\">\n                        <div className=\"columns\">\n                           <div className=\"column\">\n                              <label>Word</label>\n                              <input\n                                 ref=\"word\"\n                                 type=\"text\"\n                                 className=\"input\"\n                                 defaultValue={word.word}\n                              />\n                           </div>\n                           <div className=\"column\">\n                              <label>Type</label>\n                              <br />\n                              <div className=\"select\">\n                                 <select\n                                    onChange={e =>\n                                       this.setState({\n                                          wordType: e.target.value\n                                       })\n                                    }\n                                    defaultValue={word.wordType}>\n                                    <option value=\"n.\">Noun</option>\n                                    <option value=\"v.\">Verb</option>\n                                    <option value=\"adj.\">Adjective</option>\n                                    <option value=\"adv.\">Adverb</option>\n                                    <option value=\"prep.\">Preposition</option>\n                                    <option value=\"conj.\">Conjunction</option>\n                                    <option value=\"pp.\">Past Participle</option>\n                                    <option value=\"pt.\">Part Tense</option>\n                                 </select>\n                              </div>\n                           </div>\n                        </div>\n                        <div className=\"columns\">\n                           <div className=\"column\">\n                              <label>Translate</label>\n                              <input\n                                 ref=\"translate\"\n                                 type=\"text\"\n                                 className=\"input\"\n                                 defaultValue={word.translate}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"columns\">\n                           <div className=\"column\">\n                              <label>Image</label>\n                              <input\n                                 ref=\"image\"\n                                 type=\"text\"\n                                 className=\"input\"\n                                 defaultValue={word.image}\n                              />\n                           </div>\n                        </div>\n                     </form>\n                  </section>\n                  <footer className=\"modal-card-foot\">\n                     <button\n                        className=\"button is-success\"\n                        onClick={this.editWord}>\n                        Save\n                     </button>\n                     <button\n                        className=\"button\"\n                        onClick={() => this.setState({ modal: !modal })}>\n                        Cancel\n                     </button>\n                  </footer>\n               </div>\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default WordEdit\n","import React from 'react'\nimport WordAdd from './WordAdd'\nimport WordEdit from './WordEdit'\n\nconst WordsList = ({ songId, words, loadWords, deleteWord }) => {\n   return (\n      <div>\n         {words.map(word => {\n            return (\n               <div\n                  key={word._id}\n                  className=\"box\"\n                  style={{ backgroundColor: '#4a4a4a', color: 'white' }}>\n                  <p style={{ fontWeight: 'bold', fontSize: '18px' }}>\n                     {word.word}{' '}\n                     <span style={{ fontWeight: 'normal', fontSize: '12px' }}>\n                        ({word.wordType})\n                     </span>\n                  </p>\n                  <small>{word.translate}</small>\n                  <div className=\"image is-16by9\">\n                     <img src={word.image} alt=\"\" />\n                  </div>\n                  <div style={{ display: 'flex' }}>\n                     <WordEdit\n                        wordId={word._id}\n                        word={word}\n                        loadWords={loadWords}\n                     />\n                     <button\n                        className=\"button is-danger is-small\"\n                        style={{ margin: '0.5rem' }}\n                        onClick={() => deleteWord(word._id)}>\n                        Del.\n                     </button>\n                  </div>\n               </div>\n            )\n         })}\n         <div className=\"column\">\n            <WordAdd songId={songId} loadWords={loadWords} />\n         </div>\n      </div>\n   )\n}\n\nexport default WordsList\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport Iframe from 'react-iframe'\n\nimport Lyrics from '../components/song/Lyrics'\nimport WordsList from '../components/words/WordsList'\n\nclass Show extends Component {\n   state = {\n      song: [],\n      lyrics: '',\n      youtubeId: '',\n      showEditor: false,\n      words: []\n   }\n\n   componentDidMount = () => {\n      this.loadSong()\n      this.loadWords()\n   }\n\n   loadSong = () => {\n      axios.get(`/song/${this.props.match.params.id}`).then(res => {\n         this.setState({\n            song: res.data.song,\n            lyrics: res.data.lyrics,\n            youtubeId: res.data.youtubeId\n         })\n      })\n   }\n\n   loadWords = () => {\n      axios.get(`/word/${this.props.match.params.id}`).then(res => {\n         console.log(res.data)\n         this.setState({ words: res.data.words })\n      })\n   }\n\n   handleChange = lyrics => {\n      this.setState({ lyrics })\n   }\n\n   handleEditor = () => {\n      this.setState({ showEditor: !this.state.showEditor })\n   }\n\n   updateLyrics = () => {\n      const { lyrics } = this.state\n      axios({\n         url: '/lyrics',\n         method: 'PUT',\n         data: {\n            _id: this.state.song._id,\n            lyrics: lyrics\n         }\n      }).then(res => {\n         console.log(res.data)\n         if (res.data.msg === 'Success') {\n            this.setState({ showEditor: false })\n         }\n      })\n   }\n\n   deleteWord = idWord => {\n      if (window.confirm('Would you like to delete it.')) {\n         axios({\n            url: '/word',\n            method: 'DELETE',\n            data: {\n               idWord: idWord\n            }\n         }).then(res => {\n            console.log(res.data)\n            this.loadWords()\n         })\n      }\n   }\n\n   render() {\n      return (\n         <div className=\"m\" style={{ backgroundColor: '#4a4a4a' }}>\n            <div className=\"blockA\" style={{ backgroundColor: '#4a4a4a' }}>\n               <div\n                  style={{\n                     height: '40%',\n                     width: '100%',\n                     display: 'flex',\n                     justifyContent: 'center',\n                     padding: '1rem'\n                  }}>\n                  <Iframe\n                     className=\"box has-background-dark has-text-light\"\n                     url={\n                        this.state.youtubeId === ''\n                           ? ''\n                           : `https://www.youtube.com/embed/${\n                                this.state.youtubeId\n                             }`\n                     }\n                     position=\"static\"\n                  />\n               </div>\n               <div\n                  style={{\n                     height: '60%',\n                     padding: '1rem'\n                  }}>\n                  <div\n                     className=\"box has-background-dark has-text-light\"\n                     style={{ height: '100%', overflow: 'auto' }}>\n                     <Lyrics\n                        lyrics={this.state.lyrics}\n                        showEditor={this.state.showEditor}\n                        handleEditor={this.handleEditor}\n                        handleChange={this.handleChange}\n                        updateLyrics={this.updateLyrics}\n                     />\n                  </div>\n               </div>\n            </div>\n            <div className=\"blockB\" style={{ backgroundColor: '#4a4a4a' }}>\n               <div\n                  className=\"box has-background-dark has-text-light\"\n                  style={{\n                     height: '100%',\n                     overflow: 'auto'\n                  }}>\n                  <WordsList\n                     songId={this.state.song._id}\n                     words={this.state.words}\n                     loadWords={this.loadWords}\n                     deleteWord={this.deleteWord}\n                  />\n               </div>\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default Show\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport classnames from 'classnames'\nimport { toast } from 'react-toastify'\n\nimport Navbar from '../components/navbar'\n\nexport class Search extends Component {\n   state = {\n      search: [],\n      length: 0,\n      isLoading: false\n   }\n\n   searchOnEnter = e => {\n      if (e.key === 'Enter') {\n         axios({\n            url: '/youtube',\n            method: 'POST',\n            data: {\n               search: this.refs.search.value,\n               length: 10\n            }\n         }).then(res => {\n            console.log(res.data)\n            this.setState({ search: res.data, length: 10 })\n         })\n      }\n   }\n\n   searchOnButton = () => {\n      axios({\n         url: '/youtube',\n         method: 'POST',\n         data: {\n            search: this.refs.search.value,\n            length: 10\n         }\n      }).then(res => {\n         console.log(res.data)\n         this.setState({ search: res.data, length: 10 })\n      })\n   }\n\n   moreSearch = () => {\n      const { length } = this.state\n      this.setState({ isLoading: true })\n      axios({\n         url: '/youtube',\n         method: 'POST',\n         data: {\n            search: this.refs.search.value,\n            length: length + 10\n         }\n      }).then(res => {\n         console.log(res.data)\n         this.setState({\n            search: res.data,\n            length: length + 10,\n            isLoading: false\n         })\n      })\n   }\n\n   addSong = details => {\n      axios({\n         url: '/song',\n         method: 'POST',\n         data: { details: details, created: new Date() }\n      }).then(res => {\n         console.log(res.data)\n         toast('Add Song Success', {\n            position: toast.POSITION.BOTTOM_RIGHT\n         })\n      })\n   }\n\n   searchList = search => {\n      return search.map((item, index) => {\n         return (\n            <div\n               onClick={() => this.addSong(item)}\n               className=\"box\"\n               key={item.id}>\n               <div className=\"columns\">\n                  <div className=\"column is-2 has-text-centered\">\n                     <img src={item.thumbnails.default.url} alt=\"\" />\n                  </div>\n                  <div className=\"column\">\n                     <p>\n                        {index + 1} : {item.title}\n                     </p>\n                  </div>\n               </div>\n            </div>\n         )\n      })\n   }\n   render() {\n      const { search, length, isLoading } = this.state\n      return (\n         <div>\n            <Navbar />\n            <div className=\"container\">\n               <div className=\"column\">\n                  <h3 className=\"title is-3\">Youtube Search.</h3>\n                  <div className=\"columns\">\n                     <div className=\"column\">\n                        <input\n                           className=\"input\"\n                           type=\"text\"\n                           onKeyPress={this.searchOnEnter}\n                           ref=\"search\"\n                        />\n                     </div>\n                     <div className=\"column is-2 has-text-centered\">\n                        <button\n                           className=\"button is-danger\"\n                           onClick={this.searchOnButton}>\n                           Search\n                        </button>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"column\">{this.searchList(search)}</div>\n               <div className=\"column has-text-centered\">\n                  {length === 0 ? null : (\n                     <button\n                        className={classnames({\n                           'button is-warning': true,\n                           'is-loading': isLoading\n                        })}\n                        onClick={this.moreSearch}>\n                        Load More\n                     </button>\n                  )}\n               </div>\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default Search\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\nimport './assets/css/ReactToastify.css'\n\nimport List from './pages/List'\nimport Show from './pages/Show'\nimport Search from './pages/Search'\n\nclass App extends Component {\n   render() {\n      return (\n         <Router>\n            <div>\n               <ToastContainer />\n               <Route exact path=\"/\" component={List} />\n               <Route path=\"/show/:id\" component={Show} />\n               <Route path=\"/search\" component={Search} />\n            </div>\n         </Router>\n      )\n   }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './assets/css/bulma.css'\nimport './assets/css/style.css'\nimport 'react-quill/dist/quill.snow.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}